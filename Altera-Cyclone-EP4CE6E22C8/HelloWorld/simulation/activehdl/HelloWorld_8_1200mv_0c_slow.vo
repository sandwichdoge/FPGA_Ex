// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "04/13/2020 00:06:43"

// 
// Device: Altera EP4CE6E22C8 Package TQFP144
// 

// 
// This Verilog file should be used for Active-HDL (Verilog) only
// 

`timescale 1 ps/ 1 ps

module HelloWorld (
	led,
	osc_in);
output 	[3:0] led;
input 	osc_in;

// Design Ports Information
// led[3]	=>  Location: PIN_49,	 I/O Standard: 2.5 V,	 Current Strength: Default
// led[2]	=>  Location: PIN_50,	 I/O Standard: 2.5 V,	 Current Strength: Default
// led[1]	=>  Location: PIN_51,	 I/O Standard: 2.5 V,	 Current Strength: Default
// led[0]	=>  Location: PIN_52,	 I/O Standard: 2.5 V,	 Current Strength: Default
// osc_in	=>  Location: PIN_23,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("HelloWorld_8_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DCLK~~padout ;
wire \~ALTERA_DATA0~~ibuf_o ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_nCEO~~padout ;
wire \~ALTERA_DCLK~~obuf_o ;
wire \~ALTERA_nCEO~~obuf_o ;
wire \osc_in~input_o ;
wire \inst|altpll_component|auto_generated|wire_pll1_fbout ;
wire \inst|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl_outclk ;
wire \inst1|counter_out[0]~3_combout ;
wire \inst1|counter_out[1]~2_combout ;
wire \inst1|counter_out[2]~1_combout ;
wire \inst1|counter_out[3]~0_combout ;
wire [4:0] \inst|altpll_component|auto_generated|wire_pll1_clk ;
wire [3:0] \inst1|counter_out ;

wire [4:0] \inst|altpll_component|auto_generated|pll1_CLK_bus ;

assign \inst|altpll_component|auto_generated|wire_pll1_clk [0] = \inst|altpll_component|auto_generated|pll1_CLK_bus [0];
assign \inst|altpll_component|auto_generated|wire_pll1_clk [1] = \inst|altpll_component|auto_generated|pll1_CLK_bus [1];
assign \inst|altpll_component|auto_generated|wire_pll1_clk [2] = \inst|altpll_component|auto_generated|pll1_CLK_bus [2];
assign \inst|altpll_component|auto_generated|wire_pll1_clk [3] = \inst|altpll_component|auto_generated|pll1_CLK_bus [3];
assign \inst|altpll_component|auto_generated|wire_pll1_clk [4] = \inst|altpll_component|auto_generated|pll1_CLK_bus [4];

// Location: IOOBUF_X13_Y0_N16
cycloneive_io_obuf \led[3]~output (
	.i(\inst1|counter_out [3]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(led[3]),
	.obar());
// synopsys translate_off
defparam \led[3]~output .bus_hold = "false";
defparam \led[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X13_Y0_N2
cycloneive_io_obuf \led[2]~output (
	.i(\inst1|counter_out [2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(led[2]),
	.obar());
// synopsys translate_off
defparam \led[2]~output .bus_hold = "false";
defparam \led[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X16_Y0_N23
cycloneive_io_obuf \led[1]~output (
	.i(\inst1|counter_out [1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(led[1]),
	.obar());
// synopsys translate_off
defparam \led[1]~output .bus_hold = "false";
defparam \led[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X16_Y0_N9
cycloneive_io_obuf \led[0]~output (
	.i(\inst1|counter_out [0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(led[0]),
	.obar());
// synopsys translate_off
defparam \led[0]~output .bus_hold = "false";
defparam \led[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \osc_in~input (
	.i(osc_in),
	.ibar(gnd),
	.o(\osc_in~input_o ));
// synopsys translate_off
defparam \osc_in~input .bus_hold = "false";
defparam \osc_in~input .simulate_z_as = "z";
// synopsys translate_on

// Location: PLL_1
cycloneive_pll \inst|altpll_component|auto_generated|pll1 (
	.areset(gnd),
	.pfdena(vcc),
	.fbin(\inst|altpll_component|auto_generated|wire_pll1_fbout ),
	.phaseupdown(gnd),
	.phasestep(gnd),
	.scandata(gnd),
	.scanclk(gnd),
	.scanclkena(vcc),
	.configupdate(gnd),
	.clkswitch(gnd),
	.inclk({gnd,\osc_in~input_o }),
	.phasecounterselect(3'b000),
	.phasedone(),
	.scandataout(),
	.scandone(),
	.activeclock(),
	.locked(),
	.vcooverrange(),
	.vcounderrange(),
	.fbout(\inst|altpll_component|auto_generated|wire_pll1_fbout ),
	.clk(\inst|altpll_component|auto_generated|pll1_CLK_bus ),
	.clkbad());
// synopsys translate_off
defparam \inst|altpll_component|auto_generated|pll1 .auto_settings = "false";
defparam \inst|altpll_component|auto_generated|pll1 .bandwidth_type = "medium";
defparam \inst|altpll_component|auto_generated|pll1 .c0_high = 60;
defparam \inst|altpll_component|auto_generated|pll1 .c0_initial = 1;
defparam \inst|altpll_component|auto_generated|pll1 .c0_low = 60;
defparam \inst|altpll_component|auto_generated|pll1 .c0_mode = "even";
defparam \inst|altpll_component|auto_generated|pll1 .c0_ph = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c1_high = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c1_initial = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c1_low = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c1_mode = "bypass";
defparam \inst|altpll_component|auto_generated|pll1 .c1_ph = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c1_use_casc_in = "off";
defparam \inst|altpll_component|auto_generated|pll1 .c2_high = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c2_initial = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c2_low = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c2_mode = "bypass";
defparam \inst|altpll_component|auto_generated|pll1 .c2_ph = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c2_use_casc_in = "off";
defparam \inst|altpll_component|auto_generated|pll1 .c3_high = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c3_initial = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c3_low = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c3_mode = "bypass";
defparam \inst|altpll_component|auto_generated|pll1 .c3_ph = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c3_use_casc_in = "off";
defparam \inst|altpll_component|auto_generated|pll1 .c4_high = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c4_initial = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c4_low = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c4_mode = "bypass";
defparam \inst|altpll_component|auto_generated|pll1 .c4_ph = 0;
defparam \inst|altpll_component|auto_generated|pll1 .c4_use_casc_in = "off";
defparam \inst|altpll_component|auto_generated|pll1 .charge_pump_current_bits = 1;
defparam \inst|altpll_component|auto_generated|pll1 .clk0_counter = "c0";
defparam \inst|altpll_component|auto_generated|pll1 .clk0_divide_by = 10;
defparam \inst|altpll_component|auto_generated|pll1 .clk0_duty_cycle = 50;
defparam \inst|altpll_component|auto_generated|pll1 .clk0_multiply_by = 1;
defparam \inst|altpll_component|auto_generated|pll1 .clk0_phase_shift = "0";
defparam \inst|altpll_component|auto_generated|pll1 .clk1_counter = "unused";
defparam \inst|altpll_component|auto_generated|pll1 .clk1_divide_by = 0;
defparam \inst|altpll_component|auto_generated|pll1 .clk1_duty_cycle = 50;
defparam \inst|altpll_component|auto_generated|pll1 .clk1_multiply_by = 0;
defparam \inst|altpll_component|auto_generated|pll1 .clk1_phase_shift = "0";
defparam \inst|altpll_component|auto_generated|pll1 .clk2_counter = "unused";
defparam \inst|altpll_component|auto_generated|pll1 .clk2_divide_by = 0;
defparam \inst|altpll_component|auto_generated|pll1 .clk2_duty_cycle = 50;
defparam \inst|altpll_component|auto_generated|pll1 .clk2_multiply_by = 0;
defparam \inst|altpll_component|auto_generated|pll1 .clk2_phase_shift = "0";
defparam \inst|altpll_component|auto_generated|pll1 .clk3_counter = "unused";
defparam \inst|altpll_component|auto_generated|pll1 .clk3_divide_by = 0;
defparam \inst|altpll_component|auto_generated|pll1 .clk3_duty_cycle = 50;
defparam \inst|altpll_component|auto_generated|pll1 .clk3_multiply_by = 0;
defparam \inst|altpll_component|auto_generated|pll1 .clk3_phase_shift = "0";
defparam \inst|altpll_component|auto_generated|pll1 .clk4_counter = "unused";
defparam \inst|altpll_component|auto_generated|pll1 .clk4_divide_by = 0;
defparam \inst|altpll_component|auto_generated|pll1 .clk4_duty_cycle = 50;
defparam \inst|altpll_component|auto_generated|pll1 .clk4_multiply_by = 0;
defparam \inst|altpll_component|auto_generated|pll1 .clk4_phase_shift = "0";
defparam \inst|altpll_component|auto_generated|pll1 .compensate_clock = "clock0";
defparam \inst|altpll_component|auto_generated|pll1 .inclk0_input_frequency = 20000;
defparam \inst|altpll_component|auto_generated|pll1 .inclk1_input_frequency = 0;
defparam \inst|altpll_component|auto_generated|pll1 .loop_filter_c_bits = 0;
defparam \inst|altpll_component|auto_generated|pll1 .loop_filter_r_bits = 27;
defparam \inst|altpll_component|auto_generated|pll1 .m = 12;
defparam \inst|altpll_component|auto_generated|pll1 .m_initial = 1;
defparam \inst|altpll_component|auto_generated|pll1 .m_ph = 0;
defparam \inst|altpll_component|auto_generated|pll1 .n = 1;
defparam \inst|altpll_component|auto_generated|pll1 .operation_mode = "normal";
defparam \inst|altpll_component|auto_generated|pll1 .pfd_max = 200000;
defparam \inst|altpll_component|auto_generated|pll1 .pfd_min = 3076;
defparam \inst|altpll_component|auto_generated|pll1 .self_reset_on_loss_lock = "off";
defparam \inst|altpll_component|auto_generated|pll1 .simulation_type = "timing";
defparam \inst|altpll_component|auto_generated|pll1 .switch_over_type = "auto";
defparam \inst|altpll_component|auto_generated|pll1 .vco_center = 1538;
defparam \inst|altpll_component|auto_generated|pll1 .vco_divide_by = 0;
defparam \inst|altpll_component|auto_generated|pll1 .vco_frequency_control = "auto";
defparam \inst|altpll_component|auto_generated|pll1 .vco_max = 3333;
defparam \inst|altpll_component|auto_generated|pll1 .vco_min = 1538;
defparam \inst|altpll_component|auto_generated|pll1 .vco_multiply_by = 0;
defparam \inst|altpll_component|auto_generated|pll1 .vco_phase_shift_step = 208;
defparam \inst|altpll_component|auto_generated|pll1 .vco_post_scale = 2;
// synopsys translate_on

// Location: CLKCTRL_G3
cycloneive_clkctrl \inst|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\inst|altpll_component|auto_generated|wire_pll1_clk [0]}),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\inst|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl_outclk ));
// synopsys translate_off
defparam \inst|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl .clock_type = "global clock";
defparam \inst|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X16_Y1_N22
cycloneive_lcell_comb \inst1|counter_out[0]~3 (
// Equation(s):
// \inst1|counter_out[0]~3_combout  = !\inst1|counter_out [0]

	.dataa(gnd),
	.datab(gnd),
	.datac(\inst1|counter_out [0]),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst1|counter_out[0]~3_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|counter_out[0]~3 .lut_mask = 16'h0F0F;
defparam \inst1|counter_out[0]~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X16_Y1_N23
dffeas \inst1|counter_out[0] (
	.clk(\inst|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl_outclk ),
	.d(\inst1|counter_out[0]~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst1|counter_out [0]),
	.prn(vcc));
// synopsys translate_off
defparam \inst1|counter_out[0] .is_wysiwyg = "true";
defparam \inst1|counter_out[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X16_Y1_N28
cycloneive_lcell_comb \inst1|counter_out[1]~2 (
// Equation(s):
// \inst1|counter_out[1]~2_combout  = \inst1|counter_out [0] $ (\inst1|counter_out [1])

	.dataa(\inst1|counter_out [0]),
	.datab(gnd),
	.datac(\inst1|counter_out [1]),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst1|counter_out[1]~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|counter_out[1]~2 .lut_mask = 16'h5A5A;
defparam \inst1|counter_out[1]~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X16_Y1_N29
dffeas \inst1|counter_out[1] (
	.clk(\inst|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl_outclk ),
	.d(\inst1|counter_out[1]~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst1|counter_out [1]),
	.prn(vcc));
// synopsys translate_off
defparam \inst1|counter_out[1] .is_wysiwyg = "true";
defparam \inst1|counter_out[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X16_Y1_N10
cycloneive_lcell_comb \inst1|counter_out[2]~1 (
// Equation(s):
// \inst1|counter_out[2]~1_combout  = \inst1|counter_out [2] $ (((\inst1|counter_out [0] & \inst1|counter_out [1])))

	.dataa(\inst1|counter_out [0]),
	.datab(gnd),
	.datac(\inst1|counter_out [2]),
	.datad(\inst1|counter_out [1]),
	.cin(gnd),
	.combout(\inst1|counter_out[2]~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|counter_out[2]~1 .lut_mask = 16'h5AF0;
defparam \inst1|counter_out[2]~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X16_Y1_N11
dffeas \inst1|counter_out[2] (
	.clk(\inst|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl_outclk ),
	.d(\inst1|counter_out[2]~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst1|counter_out [2]),
	.prn(vcc));
// synopsys translate_off
defparam \inst1|counter_out[2] .is_wysiwyg = "true";
defparam \inst1|counter_out[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X16_Y1_N8
cycloneive_lcell_comb \inst1|counter_out[3]~0 (
// Equation(s):
// \inst1|counter_out[3]~0_combout  = \inst1|counter_out [3] $ (((\inst1|counter_out [0] & (\inst1|counter_out [1] & \inst1|counter_out [2]))))

	.dataa(\inst1|counter_out [0]),
	.datab(\inst1|counter_out [1]),
	.datac(\inst1|counter_out [3]),
	.datad(\inst1|counter_out [2]),
	.cin(gnd),
	.combout(\inst1|counter_out[3]~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|counter_out[3]~0 .lut_mask = 16'h78F0;
defparam \inst1|counter_out[3]~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X16_Y1_N9
dffeas \inst1|counter_out[3] (
	.clk(\inst|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl_outclk ),
	.d(\inst1|counter_out[3]~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst1|counter_out [3]),
	.prn(vcc));
// synopsys translate_off
defparam \inst1|counter_out[3] .is_wysiwyg = "true";
defparam \inst1|counter_out[3] .power_up = "low";
// synopsys translate_on

endmodule
